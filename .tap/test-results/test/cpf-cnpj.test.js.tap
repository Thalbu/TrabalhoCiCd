TAP version 14
# Subtest: validarCpf: sucesso ao validar cpfs válidos
    ok 1 - [0]16394607215
    ok 2 - [1]00051448769
    ok 3 - [2]78033713291
    ok 4 - [3]74658379287
    ok 5 - [4]30617618291
    ok 6 - [5]22634657234
    ok 7 - [6]52915387672
    ok 8 - [7]90821262734
    ok 9 - [8]18849539215
    ok 10 - [9]68965320259
    ok 11 - [10]20888171234
    ok 12 - [11]22280014491
    ok 13 - [12]56644582249
    ok 14 - [13]80150403291
    ok 15 - [14]05892821234
    ok 16 - [15]93332149253
    ok 17 - [16]59769661287
    ok 18 - [17]52842371291
    ok 19 - [18]01120803241
    ok 20 - [19]91517770297
    ok 21 - [20]76425711272
    ok 22 - [21]76131947287
    ok 23 - [22]20948050268
    ok 24 - [23]81949332268
    ok 25 - [24]43234968268
    ok 26 - [25]16386000234
    ok 27 - [26]41576438287
    ok 28 - [27]96008130278
    ok 29 - [28]00213652293
    ok 30 - [29]00896035247
    ok 31 - [30]12345678909
    1..31
ok 1 - validarCpf: sucesso ao validar cpfs válidos # time=18.548ms

# Subtest: validarCpf: erro ao validar cpf com dígitos repetidos
    ok 1 - should be equal
    ok 2 - should be equal
    ok 3 - should be equal
    ok 4 - should be equal
    ok 5 - should be equal
    ok 6 - should be equal
    ok 7 - should be equal
    ok 8 - should be equal
    ok 9 - should be equal
    1..9
ok 2 - validarCpf: erro ao validar cpf com dígitos repetidos # time=3.442ms

# Subtest: validarCpf: erro ao validar cpfs inválidos
    ok 1 - should be equal
    ok 2 - should be equal
    ok 3 - should be equal
    ok 4 - should be equal
    ok 5 - should be equal
    ok 6 - should be equal
    ok 7 - should be equal
    ok 8 - should be equal
    ok 9 - should be equal
    ok 10 - should be equal
    ok 11 - should be equal
    ok 12 - should be equal
    ok 13 - should be equal
    ok 14 - should be equal
    ok 15 - should be equal
    ok 16 - should be equal
    ok 17 - should be equal
    ok 18 - should be equal
    ok 19 - should be equal
    ok 20 - should be equal
    ok 21 - should be equal
    ok 22 - should be equal
    ok 23 - should be equal
    ok 24 - should be equal
    ok 25 - should be equal
    ok 26 - should be equal
    ok 27 - should be equal
    ok 28 - should be equal
    ok 29 - should be equal
    ok 30 - should be equal
    ok 31 - should be equal
    1..31
ok 3 - validarCpf: erro ao validar cpfs inválidos # time=11.842ms

# Subtest: validarCnpj: sucesso ao validar cnpjs válidos
    ok 1 - [0]45588167000153
    ok 2 - [1]52981248000184
    ok 3 - [2]17488073000177
    ok 4 - [3]63530836000118
    ok 5 - [4]86967718000177
    ok 6 - [5]01115331000130
    ok 7 - [6]07820749000124
    ok 8 - [7]00338322000145
    ok 9 - [8]00236592000145
    ok 10 - [9]90511908000152
    ok 11 - [10]93710010000100
    ok 12 - [11]76548684000122
    ok 13 - [12]00941144000142
    ok 14 - [13]01556164000162
    ok 15 - [14]00521789000126
    ok 16 - [15]81457079000186
    ok 17 - [16]13596879000128
    ok 18 - [17]33328550000193
    ok 19 - [18]96301205000186
    ok 20 - [19]00514963000103
    ok 21 - [20]03209631000103
    ok 22 - [21]02785526000150
    ok 23 - [22]73363095000181
    ok 24 - [23]80272230000149
    ok 25 - [24]02658529000122
    ok 26 - [25]42275727000121
    ok 27 - [26]01374265000112
    ok 28 - [27]94925427000144
    ok 29 - [28]50791128000199
    ok 30 - [29]75820027000120
    ok 31 - [30]73305518000107
    ok 32 - [31]68654599000110
    ok 33 - [32]00862617000116
    ok 34 - [33]25404526000168
    ok 35 - [34]92731710000100
    ok 36 - [35]02818699000127
    ok 37 - [36]14945570000169
    ok 38 - [37]01068381000103
    ok 39 - [38]01349173000182
    ok 40 - [39]94011152000133
    ok 41 - [40]83198275000109
    ok 42 - [41]00558822000192
    ok 43 - [42]38147195000170
    ok 44 - [43]20674081000112
    ok 45 - [44]80274905000199
    ok 46 - [45]41262197000114
    ok 47 - [46]01529557000187
    ok 48 - [47]92654151000181
    ok 49 - [48]57003626000179
    ok 50 - [49]00000000000191
    1..50
ok 4 - validarCnpj: sucesso ao validar cnpjs válidos # time=13.266ms

# Subtest: validarCnpj: erro ao validar cnpjs inválidos
    ok 1 - should be equal
    ok 2 - should be equal
    ok 3 - should be equal
    ok 4 - should be equal
    ok 5 - should be equal
    ok 6 - should be equal
    ok 7 - should be equal
    ok 8 - should be equal
    ok 9 - should be equal
    ok 10 - should be equal
    ok 11 - should be equal
    ok 12 - should be equal
    ok 13 - should be equal
    ok 14 - should be equal
    ok 15 - should be equal
    ok 16 - should be equal
    ok 17 - should be equal
    ok 18 - should be equal
    ok 19 - should be equal
    ok 20 - should be equal
    ok 21 - should be equal
    ok 22 - should be equal
    ok 23 - should be equal
    ok 24 - should be equal
    ok 25 - should be equal
    ok 26 - should be equal
    ok 27 - should be equal
    ok 28 - should be equal
    ok 29 - should be equal
    ok 30 - should be equal
    ok 31 - should be equal
    ok 32 - should be equal
    ok 33 - should be equal
    ok 34 - should be equal
    ok 35 - should be equal
    ok 36 - should be equal
    ok 37 - should be equal
    ok 38 - should be equal
    ok 39 - should be equal
    ok 40 - should be equal
    ok 41 - should be equal
    ok 42 - should be equal
    ok 43 - should be equal
    ok 44 - should be equal
    ok 45 - should be equal
    ok 46 - should be equal
    ok 47 - should be equal
    ok 48 - should be equal
    ok 49 - should be equal
    ok 50 - should be equal
    1..50
ok 5 - validarCnpj: erro ao validar cnpjs inválidos # time=12.439ms

# Subtest: validarCpf: erro ao passar um cpf com menos de 11 digitos
    ok 1 - should be equal
    1..1
ok 6 - validarCpf: erro ao passar um cpf com menos de 11 digitos # time=1.026ms

# Subtest: tornaCpfValido: verifica se o cpf retornado possui 11 digitos
    ok 1 - should be equal
    1..1
ok 7 - tornaCpfValido: verifica se o cpf retornado possui 11 digitos # time=1.442ms

# Subtest: tornaCnpjValido: o cnpj retornado deve ter 14 digitos
    ok 1 - should be equal
    1..1
ok 8 - tornaCnpjValido: o cnpj retornado deve ter 14 digitos # time=0.741ms

# Subtest: validarCpfCnpj: o cpf retornado deve ser válido
    ok 1 - should be equal
    1..1
ok 9 - validarCpfCnpj: o cpf retornado deve ser válido # time=1.128ms

# Subtest: validarCpfCnpj: o retorno da função deve ser falso, pois é uma string aleatória
    ok 1 - should be equal
    1..1
ok 10 - validarCpfCnpj: o retorno da função deve ser falso, pois é uma string aleatória # time=1.4ms

# Subtest: validarCpf: o penultimo digito deve ser inválido, portanto cpf inválido
    ok 1 - should be equal
    1..1
ok 11 - validarCpf: o penultimo digito deve ser inválido, portanto cpf inválido # time=0.829ms

# Subtest: validarCpf: o ultimo digito deve ser inválido, portanto cnpj inválido
    ok 1 - should be equal
    1..1
ok 12 - validarCpf: o ultimo digito deve ser inválido, portanto cnpj inválido # time=1.985ms

# Subtest: formatarCpfCnpj: formata cpf para o padrão NNN.NNN.NNN-NN utilizado no boleto
    ok 1 - should be equivalent
    1..1
ok 13 - formatarCpfCnpj: formata cpf para o padrão NNN.NNN.NNN-NN utilizado no boleto # time=3.648ms

# Subtest: formatarCpfCnpj: formata cnpj para o padrão NN.NNN.NNN/NNNN-NN utilizado no boleto
    ok 1 - should be equivalent
    1..1
ok 14 - formatarCpfCnpj: formata cnpj para o padrão NN.NNN.NNN/NNNN-NN utilizado no boleto # time=1.057ms

1..14
